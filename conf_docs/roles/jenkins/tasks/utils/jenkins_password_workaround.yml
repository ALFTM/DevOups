---

# A workaround of blocking default Jenkins 2.0 administrative password

- name: 'Add environment variable on Jenkins startup'
  become: True
  lineinfile:
    dest: '/etc/init.d/jenkins'
    line: 'DAEMON_ARGS="$DAEMON_ARGS --env=jenkins.install.state=INITIAL_SETUP_COMPLETED"'
    state: 'present'
    insertafter: '^DAEMON_ARGS='


- name: 'Add start comment block to disable security and authentication'
  become: True
  lineinfile:
    dest: "{{ jenkins_etc_home_location }}/config.xml"
    line: '\1<useSecurity>false</useSecurity>'
    state: 'present'
    backrefs: True
    regexp: '^(\s*)<useSecurity>'


- name: 'Add start comment block to disable security and authentication'
  become: True
  lineinfile:
    dest: "{{ jenkins_etc_home_location }}/config.xml"
    line: '<!--'
    state: 'present'
    insertafter: '^\s*<useSecurity>'


- name: 'Add end comment block to disable security and authentication'
  become: True
  lineinfile:
    dest: "{{ jenkins_etc_home_location }}/config.xml"
    line: '-->'
    state: 'present'
    insertafter: '\s*(</securityRealm|<securityRealm .*/)>'
  notify:
    - 'HANDLER | Remove Jenkins 2 administrative password file'
    - 'HANDLER | Remove Jenkins 2 administrative password workaround'


- name: 'Restart jenkins'
  become: True
  service:
    name: "{{ jenkins_service_name }}"
    state: 'restarted'

- name: 'Waiting jenkins started'
  uri:
    url: "{{ jenkins_base_url }}/"
    status_code: '200,403'
  register: 'jenkins_check_available'
  until: "(jenkins_check_available.status == 200)
             or (jenkins_check_available.status == 403)"
  retries: "{{ jenkins_waiting_available_retries }}"
  delay: "{{ jenkins_waiting_available_delay }}"
  changed_when: False
